apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "service.fullname" . }}
  labels:
  {{- include "stack.labels" . | nindent 4 }}
  annotations:
    ad.datadoghq.com/tags: '{"deployment_stage":"rdev","env":"rdev","happy_compute":"eks","happy_service":"{{ include "service.fullname" . }}","happy_stack":"{{ include "stack.name" . }}","managedby":"happy","owner":"infra-eng@chanzuckerberg.com","project":"edu-platform","service":"happy"}'
    linkerd.io/inject: enabled
spec:
  replicas: {{ .Values.along3Along.replicas }}
  selector:
    matchLabels:
      app: {{ include "service.fullname" . }}
    {{- include "stack.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ include "service.fullname" . }}
        app.kubernetes.io/component: {{ include "service.fullname" . }}
        app.kubernetes.io/managed-by: happy
        app.kubernetes.io/name: {{ include "stack.name" . }}
        app.kubernetes.io/part-of: {{ include "stack.name" . }}
      {{- include "stack.selectorLabels" . | nindent 8 }}
      annotations:
        ad.datadoghq.com/tags: '{"deployment_stage":"rdev","env":"rdev","happy_compute":"eks","happy_service":"{{ include "service.fullname" . }}","happy_stack":"{{ include "stack.name" . }}","managedby":"happy","owner":"infra-eng@chanzuckerberg.com","project":"edu-platform","service":"happy"}'
        config.linkerd.io/default-inbound-policy: all-authenticated
        config.linkerd.io/skip-outbound-ports: 25,587,3306,4444,4567,4568,5432,6379,9300,11211
        linkerd.io/inject: enabled
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: DEPLOYMENT_STAGE
          value: {{ quote .Values.along3Along.along.env.deploymentStage }}
        - name: AWS_REGION
          value: {{ quote .Values.along3Along.along.env.awsRegion }}
        - name: AWS_DEFAULT_REGION
          value: {{ quote .Values.along3Along.along.env.awsDefaultRegion }}
        - name: HAPPY_STACK
          value: {{ quote .Values.along3Along.along.env.happyStack }}
        - name: HAPPY_SERVICE
          value: {{ quote .Values.along3Along.along.env.happyService }}
        - name: HAPPY_CONTAINER
          value: {{ quote .Values.along3Along.along.env.happyContainer }}
        - name: ALONG_ENDPOINT
          value: {{ quote .Values.along3Along.along.env.alongEndpoint }}
        - name: EXTERNAL_ALONG_ENDPOINT
          value: {{ quote .Values.along3Along.along.env.externalAlongEndpoint }}
        - name: PRIVATE_ALONG_ENDPOINT
          value: {{ quote .Values.along3Along.along.env.privateAlongEndpoint }}
        - name: APP_HOST
          value: {{ quote .Values.along3Along.along.env.appHost }}
        - name: APP_NAME
          value: {{ quote .Values.along3Along.along.env.appName }}
        - name: CONNECTIONS_ENV
          value: {{ quote .Values.along3Along.along.env.connectionsEnv }}
        - name: DEPLOY_ENV_VERSION
          value: {{ quote .Values.along3Along.along.env.deployEnvVersion }}
        - name: GIT_SHA
          value: {{ quote .Values.along3Along.along.env.gitSha }}
        - name: RACK_ENV
          value: {{ quote .Values.along3Along.along.env.rackEnv }}
        - name: RAILS_ENV
          value: {{ quote .Values.along3Along.along.env.railsEnv }}
        - name: RAILS_LOG_TO_STDOUT
          value: {{ quote .Values.along3Along.along.env.railsLogToStdout }}
        - name: RDEV_DEPLOY
          value: {{ quote .Values.along3Along.along.env.rdevDeploy }}
        - name: RELEASE_CREATED_AT
          value: {{ quote .Values.along3Along.along.env.releaseCreatedAt }}
        - name: RUN_IN_HAPPY_PATH
          value: {{ quote .Values.along3Along.along.env.runInHappyPath }}
        - name: SCRUFFY_GIT_SHA
          value: {{ quote .Values.along3Along.along.env.scruffyGitSha }}
        - name: SDL_DATABASE_HOST
          value: {{ quote .Values.along3Along.along.env.sdlDatabaseHost }}
        - name: SDL_DATABASE_NAME
          value: {{ quote .Values.along3Along.along.env.sdlDatabaseName }}
        - name: SDL_DATABASE_PORT
          value: {{ quote .Values.along3Along.along.env.sdlDatabasePort }}
        - name: SDL_DATABASE_USER
          value: {{ quote .Values.along3Along.along.env.sdlDatabaseUser }}
        - name: SECRET_KEY_BASE
          value: {{ quote .Values.along3Along.along.env.secretKeyBase }}
        - name: USE_THROW_SENTRY_ERROR
          value: {{ quote .Values.along3Along.along.env.useThrowSentryError }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        envFrom:
        - secretRef:
            name: edu-platform-rdev-along-ssm-secrets
            optional: false
        - secretRef:
            name: postgresql-along3-credentials
            optional: false
        - secretRef:
            name: redis-along3-credentials
            optional: false
        image: {{ .Values.along3Along.along.image.repository }}:{{ .Values.along3Along.along.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.along3Along.along.imagePullPolicy }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 4000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        name: along
        ports:
        - containerPort: 4000
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 4000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        resources: {{- toYaml .Values.along3Along.along.resources | nindent 10 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/happy
          mountPropagation: None
          name: integration-secret
          readOnly: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      nodeSelector: {{- toYaml .Values.along3Along.nodeSelector | nindent 8 }}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: along-rdev-edu-platform
      serviceAccountName: along-rdev-edu-platform
      shareProcessNamespace: false
      terminationGracePeriodSeconds: 30
      volumes:
      - name: integration-secret
        secret:
          defaultMode: 420
          optional: false
          secretName: integration-secret