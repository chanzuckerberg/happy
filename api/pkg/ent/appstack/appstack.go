// Code generated by ent, DO NOT EDIT.

package appstack

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the appstack type in the database.
	Label = "app_stack"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldAppName holds the string denoting the app_name field in the database.
	FieldAppName = "app_name"
	// FieldEnvironment holds the string denoting the environment field in the database.
	FieldEnvironment = "environment"
	// FieldStack holds the string denoting the stack field in the database.
	FieldStack = "stack"
	// Table holds the table name of the appstack in the database.
	Table = "app_stacks"
)

// Columns holds all SQL columns for appstack fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldAppName,
	FieldEnvironment,
	FieldStack,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the AppStack queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByDeletedAt orders the results by the deleted_at field.
func ByDeletedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeletedAt, opts...).ToFunc()
}

// ByAppName orders the results by the app_name field.
func ByAppName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAppName, opts...).ToFunc()
}

// ByEnvironment orders the results by the environment field.
func ByEnvironment(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEnvironment, opts...).ToFunc()
}

// ByStack orders the results by the stack field.
func ByStack(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldStack, opts...).ToFunc()
}
