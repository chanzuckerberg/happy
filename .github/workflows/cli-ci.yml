on:
  - pull_request

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
name: cli-build
jobs:
  cli_changes:
    runs-on: [ARM64, self-hosted, Linux]
    permissions:
      pull-requests: read
    outputs:
      run_cli_ci: ${{ steps.filter.outputs.dependencies }}
    steps:
    - name: Check for changed files
      uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          dependencies:
            - '.github/**'
            - 'cli/**'
            - 'shared/**'
  lint-cli:
    needs: cli_changes
    if: ${{ needs.cli_changes.outputs.run_cli_ci == 'true' }}
    runs-on: [ARM64, self-hosted, Linux]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version-file: cli/go.mod
          cache: true
      - name: Run go mod tidy
        run: |
          cd cli && go mod tidy
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.56.2
          github-token: ${{ secrets.GITHUB_TOKEN }}
          args: --timeout 10m0s --out-format=tab
          working-directory: cli
          skip-pkg-cache: true

  test-cli:
    needs: cli_changes
    if: ${{ needs.cli_changes.outputs.run_cli_ci == 'true' }}
    runs-on: [ARM64, self-hosted, Linux]
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.CZI_RELEASE_PLEASE_APP_ID }}
          private_key: ${{ secrets.CZI_RELEASE_PLEASE_PK }}

      - uses: actions/checkout@v3
        with:
          token: ${{ steps.generate_token.outputs.token }}
          ref: ${{ github.event.pull_request.head.ref }}

      - uses: actions/setup-go@v4
        with:
          go-version-file: cli/go.mod
          cache: true
      - name: Run go mod tidy
        run: |
          cd cli && go mod tidy

      - name: Update coverage
        if: github.actor!= 'dependabot[bot]'
        run: cd cli && make coverage-update

      - name: Commit updated coverage
        uses: EndBug/add-and-commit@v9
        with:
          add: -A
          message: commit from cli-ci -- updated coverage

      - name: Run tests
        run: cd cli && make coverage
