name: Clean up playground happy stacks

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
on:
  schedule:
    # Runs "every Friday at midnight" (see https://crontab.guru)
    - cron: '0 0 * * 5'
  push:
    branches:
      - alokshin/fix-cleanup
jobs:
  find-examples:
    name: Find examples
    runs-on: [ARM64, self-hosted, Linux]
    outputs:
      examples: ${{ steps.findExamples.outputs.examples }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/github-script@v6
        id: findExamples
        with:
          script: |
            const fs = require("fs")
            const examples = fs.readdirSync("examples")
            console.log(`Found the following examples dirs: ${JSON.stringify(examples, null, 2)}`)
            core.setOutput("examples", examples)
  clean-rdev:
    needs: find-examples
    strategy:
      matrix:
        example: ${{ fromJson(needs.find-examples.outputs.examples) }}
    if: ${{ needs.find-examples.outputs.examples != '[]' }}
    defaults:
      run:
        working-directory: ${{matrix.example}}
    name: Clean rdev happy stacks
    runs-on: [ARM64, self-hosted, Linux]
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Install Github CLI
        env:
          GH_CRED: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -ue
          set -o pipefail

          # install ghcli
          GHCLI_URL="https://github.com/cli/cli/releases/download/v2.30.0/gh_2.30.0_linux_arm64.tar.gz"
          GHCLI_DIR_NAME=ghcli
          GHCLI_TOOL_PATH="/tmp/${GHCLI_DIR_NAME}"
          mkdir -p ${GHCLI_TOOL_PATH}
          GHCLI_OUT_FILE="${GHCLI_TOOL_PATH}/ghcli.tar.gz"
          curl -sSL $GHCLI_URL -L -o ${GHCLI_OUT_FILE}
          tar -zxf ${GHCLI_OUT_FILE} -C ${GHCLI_TOOL_PATH} --strip-components 1
          GHCLI_CMD=$(find ${GHCLI_TOOL_PATH} -type f -name "gh")
          ${GHCLI_CMD} auth login --with-token < <(echo $GH_CRED)
          ${GHCLI_CMD} auth status
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::${{ secrets.AWS_PLAYGROUND_ACCOUNT_ID }}:role/gh_actions_si_playground_eks_v2
          role-duration-seconds: 1800
          role-session-name: HappyCleanupPlaygroundStacks
      - name: Clean up stale happy stacks
        uses: chanzuckerberg/github-actions/.github/actions/happy-cleanup@happy-cleanup-v1.4.0
        with:
          tfe_token: ${{secrets.TFE_TOKEN_PLAYGROUND}}
          time: 1 minutes
  clean-staging:
    needs: find-examples
    strategy:
      matrix:
        example: ${{ fromJson(needs.find-examples.outputs.examples) }}
    if: ${{ needs.find-examples.outputs.examples != '[]' }}
    defaults:
      run:
        working-directory: ${{matrix.example}}
    name: Clean staging happy stacks
    runs-on: [ARM64, self-hosted, Linux]
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Install Github CLI
        env:
          GH_CRED: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -ue
          set -o pipefail

          # install ghcli
          GHCLI_URL="https://github.com/cli/cli/releases/download/v2.30.0/gh_2.30.0_linux_arm64.tar.gz"
          GHCLI_DIR_NAME=ghcli
          GHCLI_TOOL_PATH="/tmp/${GHCLI_DIR_NAME}"
          mkdir -p ${GHCLI_TOOL_PATH}
          GHCLI_OUT_FILE="${GHCLI_TOOL_PATH}/ghcli.tar.gz"
          curl -sSL $GHCLI_URL -L -o ${GHCLI_OUT_FILE}
          tar -zxf ${GHCLI_OUT_FILE} -C ${GHCLI_TOOL_PATH} --strip-components 1
          GHCLI_CMD=$(find ${GHCLI_TOOL_PATH} -type f -name "gh")
          ${GHCLI_CMD} auth login --with-token < <(echo $GH_CRED)
          ${GHCLI_CMD} auth status
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::${{ secrets.AWS_PLAYGROUND_ACCOUNT_ID }}:role/gh_actions_si_playground_eks_v2
          role-duration-seconds: 1800
          role-session-name: HappyCleanupPlaygroundStacks
      - name: Clean up stale happy stacks
        uses: chanzuckerberg/github-actions/.github/actions/happy-cleanup@happy-cleanup-v1.1.5
        with:
          tfe_token: ${{secrets.TFE_TOKEN_PLAYGROUND}}
          time: 1 minutes
  clean-prod:
    needs: find-examples
    strategy:
      matrix:
        example: ${{ fromJson(needs.find-examples.outputs.examples) }}
    if: ${{ needs.find-examples.outputs.examples != '[]' }}
    defaults:
      run:
        working-directory: ${{matrix.example}}
    name: Clean prod happy stacks
    runs-on: [ARM64, self-hosted, Linux]
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Install Github CLI
        env:
          GH_CRED: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -ue
          set -o pipefail

          # install ghcli
          GHCLI_URL="https://github.com/cli/cli/releases/download/v2.30.0/gh_2.30.0_linux_arm64.tar.gz"
          GHCLI_DIR_NAME=ghcli
          GHCLI_TOOL_PATH="/tmp/${GHCLI_DIR_NAME}"
          mkdir -p ${GHCLI_TOOL_PATH}
          GHCLI_OUT_FILE="${GHCLI_TOOL_PATH}/ghcli.tar.gz"
          curl -sSL $GHCLI_URL -L -o ${GHCLI_OUT_FILE}
          tar -zxf ${GHCLI_OUT_FILE} -C ${GHCLI_TOOL_PATH} --strip-components 1
          GHCLI_CMD=$(find ${GHCLI_TOOL_PATH} -type f -name "gh")
          ${GHCLI_CMD} auth login --with-token < <(echo $GH_CRED)
          ${GHCLI_CMD} auth status
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::${{ secrets.AWS_PLAYGROUND_ACCOUNT_ID }}:role/gh_actions_si_playground_eks_v2
          role-duration-seconds: 1800
          role-session-name: HappyCleanupPlaygroundStacks
      - name: Clean up stale happy stacks
        uses: chanzuckerberg/github-actions/.github/actions/happy-cleanup@happy-cleanup-v1.1.5
        with:
          tfe_token: ${{secrets.TFE_TOKEN_PLAYGROUND}}
          time: 1 minutes
