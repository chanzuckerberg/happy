// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/chanzuckerberg/happy/pkg/backend/aws/interfaces (interfaces: STSPresignAPI)

// Package interfaces is a generated GoMock package.
package interfaces

import (
	context "context"
	reflect "reflect"

	v4 "github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	sts "github.com/aws/aws-sdk-go-v2/service/sts"
	gomock "github.com/golang/mock/gomock"
)

// MockSTSPresignAPI is a mock of STSPresignAPI interface.
type MockSTSPresignAPI struct {
	ctrl     *gomock.Controller
	recorder *MockSTSPresignAPIMockRecorder
}

// MockSTSPresignAPIMockRecorder is the mock recorder for MockSTSPresignAPI.
type MockSTSPresignAPIMockRecorder struct {
	mock *MockSTSPresignAPI
}

// NewMockSTSPresignAPI creates a new mock instance.
func NewMockSTSPresignAPI(ctrl *gomock.Controller) *MockSTSPresignAPI {
	mock := &MockSTSPresignAPI{ctrl: ctrl}
	mock.recorder = &MockSTSPresignAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSTSPresignAPI) EXPECT() *MockSTSPresignAPIMockRecorder {
	return m.recorder
}

// PresignGetCallerIdentity mocks base method.
func (m *MockSTSPresignAPI) PresignGetCallerIdentity(arg0 context.Context, arg1 *sts.GetCallerIdentityInput, arg2 ...func(*sts.PresignOptions)) (*v4.PresignedHTTPRequest, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "PresignGetCallerIdentity", varargs...)
	ret0, _ := ret[0].(*v4.PresignedHTTPRequest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PresignGetCallerIdentity indicates an expected call of PresignGetCallerIdentity.
func (mr *MockSTSPresignAPIMockRecorder) PresignGetCallerIdentity(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PresignGetCallerIdentity", reflect.TypeOf((*MockSTSPresignAPI)(nil).PresignGetCallerIdentity), varargs...)
}
